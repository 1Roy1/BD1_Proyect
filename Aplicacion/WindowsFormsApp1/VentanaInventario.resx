<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>