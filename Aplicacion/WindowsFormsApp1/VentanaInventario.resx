<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAA6aSURBVHhe7d05qK1XGcfhxCHGqEEQAoJDISFYiMQB7cXOIU5YCWrigIaghVgoChZi+hRaWmlj
        pYhRMShOQQRBoyAGI2qnCBYmpoi+X+Z7s87dw/vt/a13reeBX5lqHc77zz7ncK8CAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAGM0ro/dHd0bfjn4S/Sa6X5JUquV794+j5Xv58j19+d7+igie9ILo9ujn0SPR/yRJ
        Q7Z8j/9Z9MnouohJPTu6Lfp71PpCkSSN29+iW6NnRUzkJdHdUeuLQpI0T/dEN0RM4NXRX6LWF4Ikab7+
        HN0UMbCXRQ9ErS8ASdK8/TVafhGcAb0w+kPUenhJku6Lll8MZzBfjVoPLknSE90VMZC3Rv7ET5K0q+VW
        vCViAFdHv4paDy1J0uX9OlpuB8W9O2o9sCRJF3VLRHG/jFqPK0nSRS23g8JeFfnZvyTpmG6MKOoLUetR
        JUna1ecjiro3aj2qJEm7+kVEQddED0WtR5UkaVcPRs+NKOb1UetBJUnat5sjinlP1HpMSZL27Z0RxXww
        aj2mJEn79oGIYj4RtR5TkqR9+1hEMe+NWo8pSdK+vSuimDdFrceUJGnf3hhRzPXRw1HrQSVJ2tV/o+WW
        UNA9UetRJUna1Q8iivpU1HpUSZJ2dXtEUctHN/+MWg8rSdJF/SN6UURh/kEgSdKhfS6iuGuj30atB5Yk
        6fJ+Hz0/YgCvi5bf5mw9tCRJT7T89Zg//RvMR6JHotaDS5K03IhbIwZ0R9R6dEmSPhMxsC9GrYeXJM3b
        chuYwGej1heAJGm+HP/JGAGSJMd/UkaAJM2b4z85I0CS5svx51FGgCTNk+PPJYwASRo/x58mI0CSxs3x
        54qMAEkaL8efvRgBkjROjj8HMQIkqX6OP0cxAiSpbo4/KUaAJNXL8WcVRoAk1cnxZ1VGgCT1n+PPSRgB
        ktRvjj8nZQRIUn85/pyFESBJ/eT4c1ZGgCRtn+PPJowASdoux59NGQGSdP4cf7pgBEjS+XL86YoRIEmn
        z/GnS0aAJJ0ux5+uGQGStH6OPyUYAZK0Xo4/pRgBkpTP8ackI0CSjs/xpzQjQJIOz/FnCEaAJO2f489Q
        jABJ2p3jz5CMAEm6OMefoRkBkvTMHH+mYARI0lM5/kzFCJAkx59JGQGSZs7xZ2pGgKQZc/whGAGSZsrx
        h6cxAiTNkOMPDUaApJFz/OEKjABJI+b4wx6MAEkj5fjDAYwASSPk+MMRjABJlXP8IcEIkFQxxx9WYARI
        qpTjDysyAiRVyPGHEzACJPWc4w8nZARI6jHHH87ACJDUU44/nJERIKmHHH/YgBEgacscf9iQESBpixx/
        6IARIOmcOf7QESNA0jly/KFDRoCkU+b4Q8eMAEmnyPGHAowASWvm+EMhRoCkNXL8oSAjQFImxx8KMwIk
        HZPjDwMwAiQdkuMPAzECJO2T4w8DMgIkXSnHHwZmBEhq5fjDBIwASU/P8YeJGAGSlhx/mJARIM2d4w8T
        MwKkOXP8ASNAmizHH3iSESDNkeMPPIMRII2d4w9cyAiQxszxB3YyAqSxcvyBvRkB0hg5/sDBjACpdo4/
        cDQjQKqZ4w+kGQFSrRx/YDVGgFQjxx9YnREg9Z3jD5yMESD1meMPnJwRIPWV4w+cjREg9ZHjD5ydESBt
        m+MPbMYIkLbJ8Qc2ZwRI583xB7phBEjnyfEHumMESKfN8Qe6ZQRIp8nxB7pnBEjr5vgDZRgB0jo5/kA5
        RoCUy/EHyjICpONy/IHyjADpsBx/YBhGgLRfjj8wHCNAunKOPzAsI0Bq5/gDwzMCpEtz/IFpGAHSYzn+
        wHSMAM2e4w9MywjQrDn+wPSMAM2W4w/wOCNAs+T4A1zGCNDoOf4AFzACNGqOP8AORoBGy/EH2JMRoFFy
        /AEOZASoeo4/wJGMAFXN8QdIMgJULccfYCVGgKrk+AOszAhQ7zn+ACdiBKjXHH+AEzMC1FuOP8CZGAHq
        Jccf4MyMAG2d4w+wESNAW+X4A2zMCNC5c/wBOmEE6Fw5/gCdMQJ06hx/gE4ZATpVjj9A54wArZ3jD1CE
        EaC1cvwBijEClM3xByjKCNCxOf4AxRkBOjTHH2AQRoD2zfEHGIwRoF05/gCDMgJ0UY4/wOCMAF2e4w8w
        CSNAT+T4A0zGCJDjDzApI2DeHH+AyRkB8+X4A/AoI2CeHH8ALmEEjJ/jD0CTETBujj8AV2QEjJfjD8Be
        jIBxcvwBOIgRUD/HH4CjGAF1c/wBSLk/ah0Y9dvyZgCQ8seodWTUb8ubAUCKAVAvAwCANAOgXgYAAGkG
        QL0MAADSDIB6GQAApBkA9TIAAEgzAOplAACQZgDUywAAIM0AqJcBAECaAVAvAwCANAOgXgYAAGkGQL0M
        AADSDIB6GQAApBkA9TIAAEgzAOplAACQZgDUywAAIM0AqJcBAECaAVAvAwCANAOgXgYAAGkGQL0MAADS
        DIB6GQAApBkA9TIAAEgzAOplAACQZgDUywAAIM0AqJcBAECaAVAvAwCANAOgXgYAAGkGQL0MAADSDIB6
        GQAApBkA9TIAAEgzAOplAACQZgDUywAAIM0AqJcBAECaAVAvAwCANAOgXgYAAGkGQL0MAADSDIB6GQAA
        pBkA9TIAAEgzAOplAACQZgDUywAAIM0AqJcBAECaAVAvAwCANAOgXgYAAGkGQL0MAADSDIB6GQAApBkA
        9TIAAEgzAOplAACQZgDUywAAIM0AqJcBAECaAVAvAwCANAOgXgYAAGkGQL0MAADSDIB6GQAApBkA9TIA
        AEgzAOplAACQZgDUywAAIM0AqJcBAECaAVAvAwCANAOgXgYAAGkGQL0MAADSDIB6GQAApBkA9TIAAEgz
        AOplAACQZgDUywAAIM0AqJcBAECaAVAvAwCANAOgXgYAAGkGQL0MAADSDIB6GQAApBkA9TIAAEgzAOpl
        AACQZgDUywAAIM0AqJcBAECaAVAvAwCANAOgXgYAAGkGQL0MAADSDIB6GQAApBkA9TIAAEgzAOplAACQ
        ZgDUywAAIM0AqJcBAECaAVAvAwCANAOgXgYAAGkGQL0MAADSDIB6GQAApBkA9TIAAEgzAOplAACQZgDU
        ywAAIM0AqJcBAECaAVAvAwCANAOgXgYAAGkGQL0MAADSDIB6GQAApBkA9TIAAEgzAOplAACQZgDUywAA
        IM0AqJcBAECaAVAvAwCANAOgXgYAAGkGQL0MAADSDIB6GQAApBkA9TIAAEgzAOplAACQZgDUywAAIM0A
        qJcBAECaAVAvAwCANAOgXgYAAGkGQL0MAADSDIB6GQAApBkA9TIAAEgzAOplAACQZgDUywAAIM0AqJcB
        AECaAVAvAwCANAOgXgYAAGkGQL0MAADSDIB6GQAApBkA9TIAAEgzAOplAACQZgDUywAAIM0AqJcBAECa
        AVAvAwCANAOgXgYAAGkGQL0MAADSDIB6GQAApBkA9TIAAEgzAOplAACQZgDUywAAIM0AqJcBAECaAVAv
        AwCANAOgXgYAAGkGQL0MAADSDIB6GQAApBkA9TIAAEgzAOplAACQZgDUywAAIM0AqJcBAECaAVAvAwCA
        tPui1pFRvxkAAKTdG7WOjPrNAAAg7VtR68io3wwAANK+HLWOjPrNAAAg7W1R68io3wwAANKuj/4TtQ6N
        +swAAGAV34xah0Z9ZgAAsIo3R61Doz4zAABYzd1R69iovwwAAFZzY/Rg1Do46isDAIBVfTpqHRz1lQEA
        wKqujr4RtY6O+skAAGB110Tfj1qHR31kAABwEtdFP4xax0fbZwAAcDJGQL8ZAACclBHQZwYAACdnBPSX
        AQDAWRgBfWUAAHA2RkA/GQAAnJUR0EcGAABnZwRsnwEAwCaMgG0zAADYjBGwXQYAAJsyArbJAABgc0bA
        +TMAAOiCEXDeDAAAumEEnC8DAICuGAHnyQAAoDtGwOkzAADokhFw2gwAALplBJwuAwCArhkBp8kAAKB7
        RsD6GQAAlGAErJsBAEAZRsB6GQAAlGIErJMBAEA5RkA+AwCAkoyAXAYAAGUZAcdnAABQmhFwXAYAAOUZ
        AYdnAAAwBCPgsAwAAIZhBOyfAQDAUIyA/TIAABiOEbA7AwCAIRkBV84AAGBYRsDFGQAADM0IaGcAADA8
        I+CZGQAATMEIuDQDAIBpGAFPZQAAMBUj4LEMAACmYwQYAABMavYRYAAAMK2ZR4ABAMDUZh0BBgAA05tx
        BBgAABBmGwEGAAA8bqYRYAAAwNPMMgIMAAC4zAwjwAAAgIbRR4ABAAAXGHkEGAAAcAWjjgADAAB2GHEE
        GAAAsIfRRoABAAB7GmkEGAAAcIBRRoABAAAHGmEEGAAAcITqI8AAAIAjVR4BBgAAJFQdAQYAACRVHAEG
        AACsYBkBP4pax7bHfhcBACuo9EnATyMAYCVVRsB3IgBgRRVGwF0RALCy3kfArREAcAI9/2LgayMA4ER6
        /CTgT9HVEQBwQr2NgC9FAMAZ9PLjgAejl0cAwJn08EnAVyIA4My2/CTggejFEQCwgS0+CVg++n9DBABs
        6JyfBDwcvS8CADqwjIDvRa2jvVYPRbdEAEBHnhd9PWod72zLv/h3cwQAdOq26F9R65Af2vJ//XdG10YA
        QOdeGi3/SM/yC3utw76r5Wf9X4v8nT8AFHRDdEd0T7RrDPw7+m708Wj57wCAASy/I/Ca6B3Rh6OPRh+K
        3h7dFD0nAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4GhXXfV/M4W1Ys/UaPgAAAAASUVORK5CYII=
</value>
  </data>
</root>